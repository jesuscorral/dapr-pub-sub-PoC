name: Build Pub Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  get-latest-version:
    runs-on: ubuntu-latest

    outputs:
      latest_version: ${{ steps.get-latest-version.outputs.latest_version }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Get latest version from Docker Hub
      id: get-latest-version
      run: |
        REPOSITORY_NAME="pub"
        NAMESPACE="jesuscorral"
        LATEST_VERSION=$(curl -s "https://hub.docker.com/v2/namespaces/$NAMESPACE/repositories/$REPOSITORY_NAME/tags" | jq -r '.results[].name' | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n 1)
        echo "Latest version: $LATEST_VERSION"
        echo "latest_version=$LATEST_VERSION" >> $GITHUB_OUTPUT
  
  increase-version:
    runs-on: ubuntu-latest
    needs: get-latest-version

    outputs:
      new_version: ${{ steps.increase-version.outputs.new_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Increment version
        id: increment-version
        run: |
          LATEST_VERSION=$(echo ${{ needs.get-latest-version.outputs.latest_version }})
          IFS='.' read -r -a VERSION_PARTS <<< "$LATEST_VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}
          NEW_VERSION="$MAJOR.$MINOR.$((PATCH + 1))"
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
    
  build-docker-image:
    runs-on: ubuntu-latest

    needs: increase-version

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      run: |
        REPOSITORY_NAME="pub"
        NAMESPACE="jesuscorral"
        NEW_VERSION=$(echo ${{ needs.increment-version.outputs.new_version }})
        docker buildx build --platform linux/amd64,linux/arm64 -t $NAMESPACE/$REPOSITORY_NAME:$NEW_VERSION -t $NAMESPACE/$REPOSITORY_NAME:latest -f ./Pub/Dockerfile .

  push-docker-image:
    runs-on: ubuntu-latest

    needs: build-docker-image

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Push Docker image
      run: |
        REPOSITORY_NAME="pub"
        NAMESPACE="jesuscorral"
        NEW_VERSION=$(echo ${{ needs.get-latest-version.outputs.new_version }})
        docker push $NAMESPACE/$REPOSITORY_NAME:$NEW_VERSION
        docker push $NAMESPACE/$REPOSITORY_NAME:latest


